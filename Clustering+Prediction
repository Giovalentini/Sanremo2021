import pandas as pd
sanremo_df = pd.read_csv("C:/Users/g.valentini/Documents/Sanremo/sanremo_df.csv")
sanremo_df.drop(['Unnamed: 0','instrumentalness'],axis=1,inplace=True)

## preparation
categorical_features = ['key', 'mode', 'time_signature']
continuous_features = ['acousticness', 'danceability', 'duration_ms', 'energy', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence']

from sklearn.preprocessing import MinMaxScaler
mms = MinMaxScaler()
mms.fit(sanremo_df[continuous_features])
data = mms.transform(sanremo_df[continuous_features])
    
## clustering
from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=3)
kmeans.fit(data)
clusters=kmeans.labels_
sanremo_df['cluster']=clusters

'''
sanremo_df.to_csv("C:/Users/g.valentini/Documents/Sanremo/sanremo_df.csv")
sanremo_df.to_excel("C:/Users/g.valentini/Documents/Sanremo/sanremo_df.xlsx")
'''

## prediction
X_train = sanremo_df[sanremo_df['year']!=2020].drop(['winner','song','artist','cluster','year'],axis=1)
y_train = sanremo_df[sanremo_df['year']!=2020]['winner']
X_test = sanremo_df[sanremo_df['year']==2020].drop(['winner','song','artist','cluster','year'],axis=1)
y_test = sanremo_df[sanremo_df['year']==2020]['winner']

from sklearn.linear_model import LogisticRegression
logmodel = LogisticRegression()
logmodel.fit(X_train,y_train)
predictions = logmodel.predict_proba(X_test)
